name: "CI/CD"

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['2.2']

    steps:
      - uses: actions/checkout@v2
   
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
   
      - name: Install dependencies
        run: dotnet restore Api/SGH/SGH.sln
   
      - name: Build
        run: dotnet build --configuration Release --no-restore Api/SGH/SGH.sln
   
      - name: Test
        run: dotnet test --verbosity minimal --collect:"XPlat Code Coverage" Api/SGH/SGH.sln
   
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
   
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: kenobirt/sgh.api

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: Api/SGH/.
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      - name: Conect to EC2
        run: | 
          echo "${{ secrets.EC2_PEM }}" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key {{ secrets.EC2_IP }}'
          ls
    